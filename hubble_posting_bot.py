import os
import random
import time
import argparse
from pathlib import Path
from dotenv import load_dotenv
import telegram


def get_images(path="images"):
    """–°–æ–±–∏—Ä–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫ –≤ –ø–∞–ø–∫–µ"""
    images = [f for f in Path(path).glob("*") if f.suffix.lower() in [".jpg", ".jpeg", ".png"]]
    if not images:
        raise FileNotFoundError("–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –ø–∞–ø–∫–µ images/")
    return images


def publish_images(bot, channel, images, interval_minutes):
    """–ü—É–±–ª–∏–∫—É–µ—Ç —Ñ–æ—Ç–æ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º"""
    while True:
        random.shuffle(images)  # –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –ø–µ—Ä–µ–¥ —Ü–∏–∫–ª–æ–º
        for image_path in images:
            with open(image_path, "rb") as image_file:
                bot.send_photo(chat_id=channel, photo=image_file, caption="üì∑ –§–æ—Ç–æ –∏–∑ –∫–æ—Å–º–æ—Å–∞")
            print(f"–§–æ—Ç–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {image_path}")
            time.sleep(interval_minutes * 60)  # –ø–µ—Ä–µ–≤–æ–¥–∏–º –º–∏–Ω—É—Ç—ã –≤ —Å–µ–∫—É–Ω–¥—ã


def main():
    load_dotenv()

    parser = argparse.ArgumentParser(description="Telegram publisher")
    parser.add_argument("--folder", help="–ü–∞–ø–∫–∞ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏", default="images")
    parser.add_argument("--interval", type=int, help="–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ (–≤ –º–∏–Ω—É—Ç–∞—Ö)")
    args = parser.parse_args()

    token = os.getenv("TG_TOKEN")
    channel = os.getenv("CHANNEL_ID")
    interval_minutes = args.interval or int(os.getenv("TG_INTERVAL_MINUTES", 240))

    if not token or not channel:
        print("–û—à–∏–±–∫–∞: TG_TOKEN –∏–ª–∏ CHANNEL_ID –Ω–µ —É–∫–∞–∑–∞–Ω—ã.")
        return

    bot = telegram.Bot(token=token)
    images = get_images(args.folder)
    publish_images(bot, channel, images, interval_minutes)


if __name__ == "__main__":
    main()
